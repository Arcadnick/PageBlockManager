{"ast":null,"code":"var _jsxFileName = \"/Users/arcadnick/PageBlockManager/frontend/src/components/BlockField.jsx\";\nimport React from 'react';\nimport Block from './Block';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BlockField = ({\n  blocks,\n  onAddBlock,\n  onAddField,\n  onRemoveBlock,\n  canAddRight,\n  moveBlock,\n  rowIndex\n}) => {\n  //console.log(\"Blocks in BlockField:\", blocks); // Логируем блоки\n\n  if (!Array.isArray(blocks)) {\n    console.error(\"Blocks is not an array:\", blocks);\n    return null; // Или можно вернуть что-то по умолчанию\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'relative',\n      marginBottom: '20px',\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        width: '100%'\n      },\n      children: [blocks.map((block, blockIndex) => {\n        return /*#__PURE__*/_jsxDEV(Block, {\n          blockIndex: blockIndex,\n          blockNumber: block.number,\n          rowIndex: rowIndex,\n          blocks: blocks,\n          moveBlock: moveBlock,\n          onRemove: () => onRemoveBlock(blockIndex)\n        }, block.number, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this);\n      }), canAddRight && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add-block\",\n        onClick: onAddBlock,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"add-fields\",\n      onClick: onAddField,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_c = BlockField;\nexport default BlockField;\nvar _c;\n$RefreshReg$(_c, \"BlockField\");","map":{"version":3,"names":["React","Block","jsxDEV","_jsxDEV","BlockField","blocks","onAddBlock","onAddField","onRemoveBlock","canAddRight","moveBlock","rowIndex","Array","isArray","console","error","style","position","marginBottom","width","children","display","map","block","blockIndex","blockNumber","number","onRemove","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","_c","$RefreshReg$"],"sources":["/Users/arcadnick/PageBlockManager/frontend/src/components/BlockField.jsx"],"sourcesContent":["import React from 'react';\nimport Block from './Block';\n\nconst BlockField = ({\n  blocks,\n  onAddBlock,\n  onAddField,\n  onRemoveBlock,\n  canAddRight,\n  moveBlock,\n  rowIndex\n}) => {\n\n  //console.log(\"Blocks in BlockField:\", blocks); // Логируем блоки\n\n  if (!Array.isArray(blocks)) {\n    console.error(\"Blocks is not an array:\", blocks);\n    return null; // Или можно вернуть что-то по умолчанию\n  }\n\n  return (\n    <div style={{ position: 'relative', marginBottom: '20px', width: '100%' }}>\n      <div style={{ display: 'flex', width: '100%' }}>\n        {blocks.map((block, blockIndex) => {\n          return (\n            <Block\n              key={block.number}\n              blockIndex={blockIndex} \n              blockNumber={block.number} \n              rowIndex={rowIndex}\n              blocks={blocks} \n              moveBlock={moveBlock} \n              onRemove={() => onRemoveBlock(blockIndex)}\n            />\n          );\n        })}\n        {canAddRight && (\n          <button className=\"add-block\" onClick={onAddBlock}>\n            +\n          </button>\n        )}\n      </div>\n\n      <button className=\"add-fields\" onClick={onAddField}>\n        +\n      </button>\n    </div>\n  );\n};\nexport default BlockField;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,UAAU,GAAGA,CAAC;EAClBC,MAAM;EACNC,UAAU;EACVC,UAAU;EACVC,aAAa;EACbC,WAAW;EACXC,SAAS;EACTC;AACF,CAAC,KAAK;EAEJ;;EAEA,IAAI,CAACC,KAAK,CAACC,OAAO,CAACR,MAAM,CAAC,EAAE;IAC1BS,OAAO,CAACC,KAAK,CAAC,yBAAyB,EAAEV,MAAM,CAAC;IAChD,OAAO,IAAI,CAAC,CAAC;EACf;EAEA,oBACEF,OAAA;IAAKa,KAAK,EAAE;MAAEC,QAAQ,EAAE,UAAU;MAAEC,YAAY,EAAE,MAAM;MAAEC,KAAK,EAAE;IAAO,CAAE;IAAAC,QAAA,gBACxEjB,OAAA;MAAKa,KAAK,EAAE;QAAEK,OAAO,EAAE,MAAM;QAAEF,KAAK,EAAE;MAAO,CAAE;MAAAC,QAAA,GAC5Cf,MAAM,CAACiB,GAAG,CAAC,CAACC,KAAK,EAAEC,UAAU,KAAK;QACjC,oBACErB,OAAA,CAACF,KAAK;UAEJuB,UAAU,EAAEA,UAAW;UACvBC,WAAW,EAAEF,KAAK,CAACG,MAAO;UAC1Bf,QAAQ,EAAEA,QAAS;UACnBN,MAAM,EAAEA,MAAO;UACfK,SAAS,EAAEA,SAAU;UACrBiB,QAAQ,EAAEA,CAAA,KAAMnB,aAAa,CAACgB,UAAU;QAAE,GANrCD,KAAK,CAACG,MAAM;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAOlB,CAAC;MAEN,CAAC,CAAC,EACDtB,WAAW,iBACVN,OAAA;QAAQ6B,SAAS,EAAC,WAAW;QAACC,OAAO,EAAE3B,UAAW;QAAAc,QAAA,EAAC;MAEnD;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CACT;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAEN5B,OAAA;MAAQ6B,SAAS,EAAC,YAAY;MAACC,OAAO,EAAE1B,UAAW;MAAAa,QAAA,EAAC;IAEpD;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACG,EAAA,GA7CI9B,UAAU;AA8ChB,eAAeA,UAAU;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}