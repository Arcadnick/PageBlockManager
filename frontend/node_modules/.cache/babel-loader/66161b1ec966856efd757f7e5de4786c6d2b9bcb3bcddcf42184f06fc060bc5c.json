{"ast":null,"code":"var _jsxFileName = \"/Users/arcadnick/PageBlockManager/frontend/src/components/BlockEditor.jsx\",\n  _s = $RefreshSig$();\nimport { DndProvider } from 'react-dnd';\nimport React, { useState, useRef, useEffect } from 'react';\nimport BlockField from './BlockField';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MAX_BLOCKS_IN_ROW = 3;\nconst BlockEditor = () => {\n  _s();\n  const [fields, setFields] = useState([[{\n    id: uuidv4(),\n    number: 1,\n    content: ''\n  }]]);\n  const blockCounter = useRef(2);\n  useEffect(() => {\n    fetch('http://localhost:8000/api.php').then(response => response.json()).then(data => {\n      console.log(data);\n      //setBlocks(data); // Устанавливаем полученные блоки в состояние\n    }).catch(error => {\n      console.error('Error fetching blocks:', error);\n    });\n  }, []);\n  const addBlockToField = rowIndex => {\n    const updatedFields = [...fields];\n    const row = updatedFields[rowIndex];\n    if (row.length < MAX_BLOCKS_IN_ROW) {\n      const newBlockNumber = blockCounter.current++;\n      row.push({\n        id: uuidv4(),\n        number: newBlockNumber,\n        content: ''\n      });\n      setFields(updatedFields);\n    }\n  };\n  const addFieldBelow = rowIndex => {\n    const updatedFields = [...fields];\n    updatedFields.splice(rowIndex + 1, 0, [{\n      id: uuidv4(),\n      number: blockCounter.current++,\n      content: ''\n    }]);\n    setFields(updatedFields);\n  };\n  const removeBlock = (rowIndex, blockIndex) => {\n    const updatedFields = fields.map((field, rIdx) => rIdx === rowIndex ? field.filter((_, bIdx) => bIdx !== blockIndex) : field).filter(field => field.length > 0);\n    setFields(updatedFields);\n  };\n  const moveBlock = (fromRowIndex, fromBlockIndex, toRowIndex, toBlockIndex) => {\n    const updatedFields = [...fields];\n    const fromRow = updatedFields[fromRowIndex];\n    const toRow = updatedFields[toRowIndex];\n    if (!fromRow || !fromRow[fromBlockIndex] || !toRow || !toRow[toBlockIndex]) {\n      return;\n    }\n    const temp = fromRow[fromBlockIndex];\n    fromRow[fromBlockIndex] = toRow[toBlockIndex];\n    toRow[toBlockIndex] = temp;\n    setFields(updatedFields);\n  };\n  const saveToFile = () => {\n    const blob = new Blob([JSON.stringify(fields)], {\n      type: 'application/json'\n    });\n    const link = document.createElement('a');\n    link.href = URL.createObjectURL(blob);\n    link.download = 'blocks.json';\n    link.click();\n  };\n  const uploadFromFile = event => {\n    const file = event.target.files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = e => {\n      const data = JSON.parse(e.target.result);\n      setFields(data);\n      blockCounter.current = data.flat().length + 1;\n    };\n    reader.readAsText(file);\n  };\n  return /*#__PURE__*/_jsxDEV(DndProvider, {\n    backend: HTML5Backend,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          marginLeft: '5px'\n        },\n        children: \"saveDB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), fields.map((field, rowIndex) => /*#__PURE__*/_jsxDEV(BlockField, {\n        blocks: field,\n        onAddBlock: () => addBlockToField(rowIndex),\n        onAddField: () => addFieldBelow(rowIndex),\n        onRemoveBlock: blockIndex => removeBlock(rowIndex, blockIndex),\n        canAddRight: field.length < MAX_BLOCKS_IN_ROW,\n        moveBlock: moveBlock,\n        rowIndex: rowIndex\n      }, rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n_s(BlockEditor, \"ra5D0YSv+n+NjHl18B9lyT/v+As=\");\n_c = BlockEditor;\nexport default BlockEditor;\nvar _c;\n$RefreshReg$(_c, \"BlockEditor\");","map":{"version":3,"names":["DndProvider","React","useState","useRef","useEffect","BlockField","HTML5Backend","v4","uuidv4","jsxDEV","_jsxDEV","MAX_BLOCKS_IN_ROW","BlockEditor","_s","fields","setFields","id","number","content","blockCounter","fetch","then","response","json","data","console","log","catch","error","addBlockToField","rowIndex","updatedFields","row","length","newBlockNumber","current","push","addFieldBelow","splice","removeBlock","blockIndex","map","field","rIdx","filter","_","bIdx","moveBlock","fromRowIndex","fromBlockIndex","toRowIndex","toBlockIndex","fromRow","toRow","temp","saveToFile","blob","Blob","JSON","stringify","type","link","document","createElement","href","URL","createObjectURL","download","click","uploadFromFile","event","file","target","files","reader","FileReader","onload","e","parse","result","flat","readAsText","backend","children","style","marginLeft","fileName","_jsxFileName","lineNumber","columnNumber","blocks","onAddBlock","onAddField","onRemoveBlock","canAddRight","_c","$RefreshReg$"],"sources":["/Users/arcadnick/PageBlockManager/frontend/src/components/BlockEditor.jsx"],"sourcesContent":["import { DndProvider } from 'react-dnd';\nimport React, { useState, useRef, useEffect } from 'react';\nimport BlockField from './BlockField';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst MAX_BLOCKS_IN_ROW = 3;\n\n\n\nconst BlockEditor = () => {\n  const [fields, setFields] = useState([[{ id: uuidv4(), number: 1, content: '' }]]);\n  const blockCounter = useRef(2); \n\n  useEffect(() => {\n    fetch('http://localhost:8000/api.php')\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n        //setBlocks(data); // Устанавливаем полученные блоки в состояние\n      })\n      .catch((error) => {\n        console.error('Error fetching blocks:', error);\n      });\n  }, []);\n\n  const addBlockToField = (rowIndex) => {\n    const updatedFields = [...fields];\n    const row = updatedFields[rowIndex];\n    if (row.length < MAX_BLOCKS_IN_ROW) {\n      const newBlockNumber = blockCounter.current++; \n      row.push({ id: uuidv4(), number: newBlockNumber, content: '' });\n      setFields(updatedFields);\n    }\n  };\n\n  const addFieldBelow = (rowIndex) => {\n    const updatedFields = [...fields];\n    updatedFields.splice(rowIndex + 1, 0, [{ id: uuidv4(), number: blockCounter.current++, content: '' }]);\n    setFields(updatedFields);\n  };\n\n  const removeBlock = (rowIndex, blockIndex) => {\n    const updatedFields = fields\n      .map((field, rIdx) =>\n        rIdx === rowIndex ? field.filter((_, bIdx) => bIdx !== blockIndex) : field\n      )\n      .filter((field) => field.length > 0);\n    setFields(updatedFields);\n  };\n\n  const moveBlock = (fromRowIndex, fromBlockIndex, toRowIndex, toBlockIndex) => {\n    const updatedFields = [...fields];\n    const fromRow = updatedFields[fromRowIndex];\n    const toRow = updatedFields[toRowIndex];\n  \n    if (!fromRow || !fromRow[fromBlockIndex] || !toRow || !toRow[toBlockIndex]) {\n      return;\n    }\n  \n    const temp = fromRow[fromBlockIndex];\n    fromRow[fromBlockIndex] = toRow[toBlockIndex];\n    toRow[toBlockIndex] = temp;\n  \n    setFields(updatedFields);\n  };\n\n  const saveToFile = () => {\n    const blob = new Blob([JSON.stringify(fields)], { type: 'application/json' });\n    const link = document.createElement('a');\n    link.href = URL.createObjectURL(blob);\n    link.download = 'blocks.json'; \n    link.click();\n  };\n\n  const uploadFromFile = (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n    \n    const reader = new FileReader();\n    reader.onload = (e) => {\n      const data = JSON.parse(e.target.result); \n      setFields(data); \n      blockCounter.current = data.flat().length + 1; \n    };\n    reader.readAsText(file);\n  };  \n\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <div>\n        {/* <button style={{ marginLeft: '5px' }} onClick={saveToFile}>save</button> */}\n        <button style={{ marginLeft: '5px' }} >saveDB</button>\n        {/* <button style={{ marginLeft: '10px' }}>upload</button> */}\n        {/* <label style={{ marginLeft: '10px' }}>\n          <input type=\"file\" onChange={uploadFromFile}/>\n        </label> */}\n        {fields.map((field, rowIndex) => (\n          <BlockField\n            key={rowIndex}\n            blocks={field}\n            onAddBlock={() => addBlockToField(rowIndex)}\n            onAddField={() => addFieldBelow(rowIndex)}\n            onRemoveBlock={(blockIndex) => removeBlock(rowIndex, blockIndex)}\n            canAddRight={field.length < MAX_BLOCKS_IN_ROW}\n            moveBlock={moveBlock}\n            rowIndex={rowIndex} \n          />\n        ))}\n      </div>\n    </DndProvider>\n  );\n};\nexport default BlockEditor;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}